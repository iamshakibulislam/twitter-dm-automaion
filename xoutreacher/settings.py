
"""
Django settings for xoutreacher project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-t(d$uqmyi97!yg3-yw(0*tc#h+hn(30n=kmw(mf(^q&i1$1t_a'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_crontab',
    'main',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'xoutreacher.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'xoutreacher.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django-crontab settings
CRONJOBS = [
    # Lead collection every 20 minutes - calls synchronous function directly
    ('*/20 * * * *', 'main.utils.lead_collection_sync.collect_leads', {'max_lists': 5, 'verbose': False}),
    
    # Hourly lead collection with force flag (backup) - calls synchronous function directly  
    ('0 * * * *', 'main.utils.lead_collection_sync.collect_leads', {'max_lists': 10, 'force': True, 'verbose': False}),
    
    # Daily cleanup at 3 AM
    ('0 3 * * *', 'main.utils.lead_collection_sync.collect_leads', {'cleanup': True, 'verbose': False}),
]

# Crontab lock to prevent overlapping jobs
CRONTAB_LOCK_JOBS = True

# Log output for debugging
CRONTAB_COMMAND_SUFFIX = '2>&1'

# Lead Collection Multithreading Settings
LEAD_COLLECTION_SETTINGS = {
    'MAX_THREADS': 5,  # Maximum concurrent threads for lead collection
    'MAX_ACCOUNTS_PER_USER': 3,  # Max Twitter accounts to use per user simultaneously
    'BATCH_SIZE': 1000,  # Leads to collect per batch
    'RATE_LIMIT_DELAY': 30,  # Seconds to wait on rate limit
    'MAX_RETRIES': 3,  # Maximum retry attempts
    'ACCOUNT_TIMEOUT_MINUTES': 30,  # Minutes before releasing stuck accounts
    'API_DELAY_RANGE': (0.5, 1.5),  # Random delay between API calls (min, max)
}

# Database connection settings for multithreading
DATABASES['default'].update({
    'CONN_MAX_AGE': 0,  # Prevent persistent connections in threads
    'OPTIONS': {
        'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        'charset': 'utf8mb4',
    } if 'mysql' in DATABASES['default']['ENGINE'] else {}
})
